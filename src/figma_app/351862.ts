import { useCallback } from "react";
import { toCamelCase } from "../figma_app/664063";
import { throwTypeError } from "../figma_app/465776";
import { ServiceCategories } from "../905/165054";
import { ii, F7 } from "../905/859698";
import { ConfirmationLevel, Fullscreen, WhiteboardTsApi, Command, DesignGraphElements, AlignmentPosition, LibraryPubSub, Confirmation, SceneIdentifier, AppStateTsApi } from "../figma_app/763686";
import { permissionScopeHandler } from "../905/189185";
import { getFeatureFlags } from "../905/601108";
import { atomStoreManager } from "../figma_app/27355";
import _ from "../vendor/946678";
import { A as _$$A } from "../vendor/518290";
import { analyticsEventManager } from "../905/449184";
import { getInitialOptions } from "../figma_app/169182";
import { reportError } from "../905/11";
import { W6 } from "../905/125333";
import { getI18nString } from "../905/303541";
import { jsxs, jsx } from "react/jsx-runtime";
import { teamLibraryCache } from "../figma_app/80990";
import { fullscreenValue } from "../figma_app/455680";
import { getObservableValue } from "../figma_app/84367";
import { PrimaryWorkflowEnum } from "../figma_app/633080";
import { OD, AT, R0 } from "../figma_app/955650";
import { Rg, Gn } from "../figma_app/204478";
import { YV, iJ } from "../figma_app/240545";
import { A as _$$A2 } from "../3850/967299";
import { A as _$$A3 } from "../3850/548998";
import { A as _$$A4 } from "../3850/230648";
import { A as _$$A5 } from "../3850/485486";
import { A as _$$A6 } from "../3850/869015";
import { A as _$$A7 } from "../3850/727959";
import { A as _$$A8 } from "../3850/128515";
import { A as _$$A9 } from "../3850/500132";
import { A as _$$A0 } from "../3850/925484";
import { A as _$$A1 } from "../3850/147518";
import { A as _$$A10 } from "../3850/392992";
import { A as _$$A11 } from "../3850/431743";
import { A as _$$A12 } from "../3850/994593";
import { A as _$$A13 } from "../3850/166826";
import { A as _$$A14 } from "../3850/352300";
import { A as _$$A15 } from "../3850/915158";
import { A as _$$A16 } from "../3850/933038";
import { A as _$$A17 } from "../3850/108966";
import { A as _$$A18 } from "../3850/368101";
import { A as _$$A19 } from "../3850/263509";
import { A as _$$A20 } from "../3850/549171";
import { A as _$$A21 } from "../3850/434087";
import { A as _$$A22 } from "../3850/330644";
import { A as _$$A23 } from "../3850/925669";
import { A as _$$A24 } from "../3850/923403";
import { A as _$$A25 } from "../3850/287422";
import { A as _$$A26 } from "../3850/903264";
import { A as _$$A27 } from "../3850/226755";
import { A as _$$A28 } from "../3850/977719";
import { A as _$$A29 } from "../3850/295373";
import { A as _$$A30 } from "../3850/334222";
import { A as _$$A31 } from "../3850/625634";
import { A as _$$A32 } from "../3850/781308";
import { A as _$$A33 } from "../3850/887861";
import { A as _$$A34 } from "../3850/959985";
import { A as _$$A35 } from "../3850/533429";
import { A as _$$A36 } from "../3850/352971";
import { A as _$$A37 } from "../3850/576386";
import { A as _$$A38 } from "../3850/451894";
import { A as _$$A39 } from "../3850/630129";
import { A as _$$A40 } from "../3850/918253";
import { A as _$$A41 } from "../3850/226191";
import { A as _$$A42 } from "../3850/651805";
import { A as _$$A43 } from "../3850/827825";
import { A as _$$A44 } from "../3850/633698";
import { A as _$$A45 } from "../3850/356560";
import { A as _$$A46 } from "../3850/955852";
import { A as _$$A47 } from "../3850/64390";
import { A as _$$A48 } from "../3850/219151";
import { A as _$$A49 } from "../3850/32938";
import { A as _$$A50 } from "../3850/827072";
import { A as _$$A51 } from "../3850/26015";
import { A as _$$A52 } from "../svg/206262";
import { A as _$$A53 } from "../svg/471509";
import { A as _$$A54 } from "../1762/113386";
import { A as _$$A55 } from "../1762/837144";
import { A as _$$A56 } from "../1762/261637";
import { A as _$$A57 } from "../1762/867224";
import { A as _$$A58 } from "../1762/770285";
import { A as _$$A59 } from "../1762/682370";
import { A as _$$A60 } from "../1762/650509";
import { A as _$$A61 } from "../1762/494989";
import { A as _$$A62 } from "../1762/485106";
import { A as _$$A63 } from "../1762/707383";
import { A as _$$A64 } from "../1762/373800";
import { A as _$$A65 } from "../1762/267196";
import { A as _$$A66 } from "../1762/54279";
import { A as _$$A67 } from "../1762/514675";
import { A as _$$A68 } from "../1762/166970";
import { A as _$$A69 } from "../1762/481432";
import { A as _$$A70 } from "../1762/885536";
import { A as _$$A71 } from "../1762/216436";
import { A as _$$A72 } from "../1762/20479";
import { A as _$$A73 } from "../1762/118314";
import { A as _$$A74 } from "../1762/765281";
import { A as _$$A75 } from "../1762/494199";
import { A as _$$A76 } from "../1762/797876";
import { A as _$$A77 } from "../1762/672615";
import { A as _$$A78 } from "../1762/316663";
import { A as _$$A79 } from "../1762/918765";
import { A as _$$A80 } from "../1762/70414";
import { A as _$$A81 } from "../1762/687811";
import { A as _$$A82 } from "../1762/650385";
import { A as _$$A83 } from "../1762/412745";
import { A as _$$A84 } from "../1762/428383";
import { A as _$$A85 } from "../1762/549059";
import { A as _$$A86 } from "../1762/976161";
import { A as _$$A87 } from "../1762/690776";
import { A as _$$A88 } from "../1762/540057";
import { A as _$$A89 } from "../1762/434476";
import { A as _$$A90 } from "../1762/107636";
import { A as _$$A91 } from "../1762/345114";
import { A as _$$A92 } from "../1762/208900";
import { A as _$$A93 } from "../1762/166073";
import { A as _$$A94 } from "../1762/805688";
import { A as _$$A95 } from "../1762/542915";
import { A as _$$A96 } from "../1762/851908";
import { A as _$$A97 } from "../1762/885408";
import { A as _$$A98 } from "../1762/738587";
import { A as _$$A99 } from "../1762/553770";
import { A as _$$A100 } from "../1762/419921";
import { A as _$$A101 } from "../1762/538752";
import { A as _$$A102 } from "../svg/371326";
import { A as _$$A103 } from "../svg/993383";
import { A as _$$A104 } from "../svg/9618";
import { A as _$$A105 } from "../svg/220618";
import { A as _$$A106 } from "../svg/639953";
import { A as _$$A107 } from "../svg/460031";
import { A as _$$A108 } from "../svg/448042";
import { A as _$$A109 } from "../svg/495516";
import { A as _$$A110 } from "../svg/667365";
import { A as _$$A111 } from "../svg/98743";
import { A as _$$A112 } from "../svg/546150";
import { A as _$$A113 } from "../svg/221080";
import { A as _$$A114 } from "../svg/511238";
import { A as _$$A115 } from "../svg/64930";
import { A as _$$A116 } from "../svg/73236";
import { A as _$$A117 } from "../svg/237947";
import { A as _$$A118 } from "../svg/270241";
import { A as _$$A119 } from "../svg/196961";
import { A as _$$A120 } from "../svg/886095";
import { A as _$$A121 } from "../svg/141051";
import { A as _$$A122 } from "../svg/963166";
import { A as _$$A123 } from "../svg/600707";
import { A as _$$A124 } from "../svg/324634";
import { A as _$$A125 } from "../svg/617118";
import { A as _$$A126 } from "../svg/555696";
import { A as _$$A127 } from "../svg/809278";
import { A as _$$A128 } from "../svg/698484";
import { A as _$$A129 } from "../svg/515742";
import { A as _$$A130 } from "../svg/920134";
import { A as _$$A131 } from "../svg/381071";
var n;
var h = _;
(e => {
  e.AWS = function () {
    return jsxs("svg", {
      width: "32",
      height: "32",
      viewBox: "0 0 100 100",
      fill: "none",
      children: [jsx("rect", {
        width: "100",
        height: "100"
      }), jsxs("g", {
        clipPath: "url(#clip0_1_45297)",
        children: [jsx("path", {
          d: "M28.4523 41.8662C28.4523 43.0846 28.5841 44.0725 28.8146 44.797C29.078 45.5215 29.4073 46.3118 29.8684 47.168C30.033 47.4315 30.0989 47.6949 30.0989 47.9255C30.0989 48.2548 29.9013 48.5841 29.4732 48.9134L27.3986 50.2965C27.1022 50.4941 26.8058 50.5929 26.5423 50.5929C26.213 50.5929 25.8837 50.4282 25.5544 50.1318C25.0934 49.6379 24.6982 49.111 24.3689 48.5841C24.0396 48.0242 23.7103 47.3986 23.3481 46.6412C20.7794 49.6708 17.5522 51.1856 13.6664 51.1856C10.9002 51.1856 8.69381 50.3953 7.0802 48.8146C5.46658 47.2339 4.64331 45.1263 4.64331 42.4919C4.64331 39.6927 5.63124 37.4205 7.64002 35.7081C9.64881 33.9957 12.3162 33.1395 15.7081 33.1395C16.8277 33.1395 17.9803 33.2383 19.1988 33.4029C20.4172 33.5676 21.6686 33.831 22.9858 34.1274V31.7235C22.9858 29.2207 22.4589 27.4754 21.4381 26.4545C20.3843 25.4337 18.606 24.9397 16.0703 24.9397C14.9177 24.9397 13.7322 25.0714 12.5138 25.3678C11.2953 25.6642 10.1098 26.0264 8.95726 26.4874C8.43036 26.718 8.03519 26.8497 7.80468 26.9156C7.57416 26.9814 7.4095 27.0143 7.27778 27.0143C6.81675 27.0143 6.58623 26.685 6.58623 25.9935V24.3799C6.58623 23.853 6.65209 23.4578 6.81675 23.2273C6.9814 22.9968 7.27778 22.7663 7.73881 22.5357C8.89139 21.943 10.2745 21.449 11.8881 21.0539C13.5017 20.6258 15.2141 20.4282 17.0253 20.4282C20.9441 20.4282 23.8091 21.3173 25.6532 23.0956C27.4644 24.8738 28.3865 27.5742 28.3865 31.1966V41.8662H28.4523ZM15.0824 46.8717C16.1691 46.8717 17.2888 46.6741 18.4743 46.2789C19.6598 45.8837 20.7136 45.1593 21.6027 44.1713C22.1296 43.5456 22.5248 42.8541 22.7224 42.0638C22.92 41.2734 23.0517 40.3184 23.0517 39.1988V37.8157C22.0967 37.5852 21.0758 37.3876 20.022 37.2558C18.9682 37.1241 17.9474 37.0583 16.9265 37.0583C14.7202 37.0583 13.1065 37.4864 12.0198 38.3755C10.9331 39.2646 10.4062 40.516 10.4062 42.1626C10.4062 43.7103 10.8014 44.8629 11.6247 45.6532C12.415 46.4765 13.5676 46.8717 15.0824 46.8717ZM41.5259 50.4282C40.9331 50.4282 40.538 50.3294 40.2745 50.0989C40.0111 49.9013 39.7806 49.4403 39.583 48.8146L31.8442 23.359C31.6466 22.7004 31.5478 22.2723 31.5478 22.0418C31.5478 21.5149 31.8113 21.2185 32.3382 21.2185H35.5654C36.1911 21.2185 36.6192 21.3173 36.8497 21.5478C37.1132 21.7454 37.3107 22.2064 37.5083 22.8321L43.0407 44.6324L48.1779 22.8321C48.3426 22.1735 48.5402 21.7454 48.8036 21.5478C49.0671 21.3502 49.5281 21.2185 50.1209 21.2185H52.7553C53.381 21.2185 53.8091 21.3173 54.0726 21.5478C54.336 21.7454 54.5665 22.2064 54.6983 22.8321L59.9013 44.8958L65.5984 22.8321C65.796 22.1735 66.0265 21.7454 66.257 21.5478C66.5204 21.3502 66.9485 21.2185 67.5413 21.2185H70.6039C71.1308 21.2185 71.4271 21.482 71.4271 22.0418C71.4271 22.2064 71.3942 22.3711 71.3613 22.5687C71.3283 22.7663 71.2625 23.0297 71.1308 23.3919L63.1944 48.8475C62.9968 49.5061 62.7663 49.9342 62.5029 50.1318C62.2394 50.3294 61.8113 50.4611 61.2515 50.4611H58.4194C57.7938 50.4611 57.3657 50.3623 57.1022 50.1318C56.8388 49.9013 56.6082 49.4732 56.4765 48.8146L51.3722 27.5742L46.3009 48.7817C46.1362 49.4403 45.9386 49.8684 45.6752 50.0989C45.4117 50.3294 44.9507 50.4282 44.358 50.4282H41.5259ZM83.8421 51.3173C82.1297 51.3173 80.4173 51.1198 78.7707 50.7246C77.1242 50.3294 75.8399 49.9013 74.9837 49.4073C74.4568 49.111 74.0945 48.7817 73.9628 48.4853C73.8311 48.1889 73.7652 47.8596 73.7652 47.5632V45.8837C73.7652 45.1922 74.0287 44.8629 74.5226 44.8629C74.7202 44.8629 74.9178 44.8958 75.1154 44.9617C75.313 45.0275 75.6094 45.1593 75.9387 45.291C77.0583 45.7849 78.2768 46.1801 79.5611 46.4436C80.8783 46.707 82.1626 46.8387 83.4798 46.8387C85.5545 46.8387 87.1681 46.4765 88.2878 45.752C89.4074 45.0275 90.0002 43.9737 90.0002 42.6236C90.0002 41.7015 89.7038 40.9441 89.111 40.3184C88.5183 39.6927 87.3986 39.1329 85.785 38.606L81.01 37.1241C78.6061 36.3667 76.8278 35.2471 75.7411 33.7652C74.6544 32.3162 74.0945 30.7026 74.0945 28.9902C74.0945 27.6071 74.3909 26.3887 74.9837 25.3349C75.5764 24.2811 76.3668 23.359 77.3547 22.6345C78.3426 21.8771 79.4623 21.3173 80.7795 20.9221C82.0967 20.527 83.4798 20.3623 84.9288 20.3623C85.6533 20.3623 86.4107 20.3952 87.1352 20.494C87.8926 20.5928 88.5841 20.7245 89.2757 20.8563C89.9343 21.0209 90.56 21.1856 91.1527 21.3832C91.7455 21.5807 92.2065 21.7783 92.5358 21.9759C92.9969 22.2394 93.3262 22.5028 93.5238 22.7992C93.7214 23.0626 93.8201 23.4249 93.8201 23.8859V25.4337C93.8201 26.1252 93.5567 26.4874 93.0627 26.4874C92.7993 26.4874 92.3712 26.3557 91.8114 26.0923C89.9343 25.2361 87.8267 24.808 85.4886 24.808C83.6116 24.808 82.1297 25.1044 81.1088 25.73C80.088 26.3557 79.5611 27.3107 79.5611 28.6609C79.5611 29.583 79.8904 30.3733 80.549 30.999C81.2076 31.6247 82.4261 32.2504 84.1714 32.8102L88.8476 34.2921C91.2186 35.0495 92.931 36.1033 93.9519 37.4534C94.9727 38.8036 95.4667 40.3514 95.4667 42.0638C95.4667 43.4798 95.1703 44.7641 94.6105 45.8837C94.0177 47.0034 93.2274 47.9913 92.2065 48.7817C91.1857 49.6049 89.9672 50.1977 88.5512 50.6258C87.0693 51.0868 85.5216 51.3173 83.8421 51.3173Z",
          fill: "#252F3E"
        }), jsx("path", {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M90.066 67.3222C79.2317 75.3244 63.4908 79.5725 49.9562 79.5725C30.988 79.5725 13.8969 72.5582 0.987961 60.9007C-0.032896 59.9786 0.889169 58.7272 2.10761 59.4517C16.0703 67.5527 33.2932 72.4594 51.1088 72.4594C63.1285 72.4594 76.3338 69.9567 88.4853 64.8195C90.2965 63.9962 91.8443 66.005 90.066 67.3222Z",
          fill: "#FF9900"
        }), jsx("path", {
          fillRule: "evenodd",
          clipRule: "evenodd",
          d: "M94.5775 62.1846C93.1945 60.4064 85.4228 61.3284 81.8992 61.7565C80.8454 61.8883 80.6807 60.9662 81.6357 60.2747C87.8267 55.9278 98.0024 57.1792 99.1879 58.6281C100.373 60.11 98.8586 70.2856 93.0627 75.1594C92.1736 75.9168 91.3174 75.5217 91.7126 74.5337C93.0298 71.2736 95.9606 63.93 94.5775 62.1846Z",
          fill: "#FF9900"
        })]
      }), jsx("defs", {
        children: jsx("clipPath", {
          id: "clip0_1_45297",
          children: jsx("rect", {
            width: "100.11",
            height: "59.9342",
            fill: "white",
            transform: "translate(0 20)"
          })
        })
      })]
    });
  };
  e.Azure = function () {
    return jsxs("svg", {
      width: "32",
      height: "32",
      viewBox: "0 0 100 100",
      fill: "none",
      children: [jsx("rect", {
        width: "100",
        height: "100"
      }), jsx("path", {
        d: "M37.1708 13.7265H59.9541L36.3028 83.8026C36.0598 84.5227 35.597 85.1484 34.9796 85.5917C34.3623 86.0349 33.6215 86.2734 32.8615 86.2736H15.1305C14.5546 86.2737 13.9871 86.1366 13.4747 85.8738C12.9624 85.611 12.5199 85.2299 12.1841 84.7622C11.8482 84.2945 11.6285 83.7535 11.5432 83.184C11.4579 82.6146 11.5094 82.033 11.6935 81.4873L33.7286 16.1975C33.9716 15.4771 34.4344 14.8511 35.052 14.4076C35.6695 13.9642 36.4106 13.7265 37.1708 13.7265Z",
        fill: "url(#paint0_linear_1_45304)"
      }), jsx("path", {
        d: "M70.2781 60.7285H34.1493C33.8134 60.7281 33.4852 60.8289 33.2074 61.0178C32.9296 61.2066 32.7152 61.4747 32.5919 61.7872C32.4687 62.0996 32.4424 62.442 32.5166 62.7696C32.5907 63.0972 32.7617 63.3949 33.0074 63.6239L56.2229 85.2924C56.8989 85.9229 57.7888 86.2735 58.7132 86.2733H79.1707L70.2781 60.7285Z",
        fill: "#0078D4"
      }), jsx("path", {
        d: "M37.1709 13.7256C36.4023 13.7227 35.6529 13.9655 35.0322 14.4188C34.4115 14.872 33.952 15.5118 33.7207 16.2447L11.7206 81.427C11.5241 81.9746 11.4625 82.5614 11.5408 83.1379C11.6191 83.7144 11.8351 84.2635 12.1706 84.7389C12.506 85.2142 12.951 85.6018 13.4679 85.8687C13.9847 86.1357 14.5583 86.2743 15.1401 86.2727H33.3287C34.0061 86.1517 34.6393 85.853 35.1635 85.4072C35.6877 84.9614 36.0842 84.3844 36.3125 83.7352L40.6997 70.8054L56.371 85.4222C57.0277 85.9654 57.8515 86.2658 58.7037 86.2727H79.0851L70.1461 60.728L44.0877 60.7341L60.0364 13.7256H37.1709Z",
        fill: "url(#paint1_linear_1_45304)"
      }), jsx("path", {
        d: "M66.2705 16.1931C66.0279 15.4739 65.5657 14.8489 64.9491 14.4062C64.3325 13.9636 63.5926 13.7255 62.8335 13.7256H37.4419C38.2009 13.7256 38.9408 13.9637 39.5574 14.4064C40.1739 14.849 40.6361 15.4739 40.8789 16.1931L62.9149 81.4856C63.0991 82.0313 63.1507 82.613 63.0655 83.1827C62.9803 83.7523 62.7606 84.2934 62.4248 84.7613C62.0889 85.2292 61.6464 85.6104 61.134 85.8734C60.6215 86.1364 60.0539 86.2736 59.4779 86.2736H84.8704C85.4463 86.2734 86.0139 86.1361 86.5262 85.8731C87.0385 85.6101 87.4809 85.2289 87.8166 84.761C88.1524 84.2931 88.372 83.752 88.4572 83.1825C88.5423 82.6129 88.4907 82.0312 88.3065 81.4856L66.2705 16.1931Z",
        fill: "url(#paint2_linear_1_45304)"
      }), jsxs("defs", {
        children: [jsxs("linearGradient", {
          id: "paint0_linear_1_45304",
          x1: "45.4746",
          y1: "19.1025",
          x2: "21.8137",
          y2: "89.0027",
          gradientUnits: "userSpaceOnUse",
          children: [jsx("stop", {
            stopColor: "#114A8B"
          }), jsx("stop", {
            offset: "1",
            stopColor: "#0669BC"
          })]
        }), jsxs("linearGradient", {
          id: "paint1_linear_1_45304",
          x1: "52.8657",
          y1: "51.677",
          x2: "47.3926",
          y2: "53.5276",
          gradientUnits: "userSpaceOnUse",
          children: [jsx("stop", {
            stopOpacity: "0.3"
          }), jsx("stop", {
            offset: "0.071",
            stopOpacity: "0.2"
          }), jsx("stop", {
            offset: "0.321",
            stopOpacity: "0.1"
          }), jsx("stop", {
            offset: "0.623",
            stopOpacity: "0.05"
          }), jsx("stop", {
            offset: "1",
            stopOpacity: "0"
          })]
        }), jsxs("linearGradient", {
          id: "paint2_linear_1_45304",
          x1: "49.8555",
          y1: "17.0628",
          x2: "75.8281",
          y2: "86.2587",
          gradientUnits: "userSpaceOnUse",
          children: [jsx("stop", {
            stopColor: "#3CCBF4"
          }), jsx("stop", {
            offset: "1",
            stopColor: "#2892DF"
          })]
        })]
      })]
    });
  };
  e.GoogleCloud = function () {
    return jsxs("svg", {
      width: "32",
      height: "32",
      viewBox: "0 0 100 100",
      fill: "none",
      children: [jsx("rect", {
        width: "100",
        height: "100"
      }), jsx("path", {
        d: "M62.4184 33.9607H65.2209L73.2082 26.2159L73.6006 22.9278C69.0249 19.0118 63.4953 16.2915 57.534 15.0239C51.5727 13.7562 45.3765 13.9831 39.5308 15.683C33.685 17.383 28.3827 20.4999 24.1247 24.7393C19.8667 28.9787 16.7935 34.2007 15.1956 39.912C16.0854 39.5583 17.0711 39.501 17.9981 39.7489L33.9726 37.1945C33.9726 37.1945 34.7853 35.8901 35.2057 35.9716C38.6285 32.3266 43.3588 30.0881 48.4281 29.7142C53.4975 29.3404 58.5225 30.8595 62.4745 33.9607H62.4184Z",
        fill: "#EA4335"
      }), jsx("path", {
        d: "M84.5879 39.9121C82.752 33.3565 78.9825 27.4632 73.742 22.9551L62.5319 33.8249C64.8682 35.676 66.7405 38.0173 68.0076 40.6722C69.2747 43.3272 69.9035 46.2265 69.8465 49.1514V51.0809C71.1567 51.0809 72.4541 51.3311 73.6646 51.8173C74.875 52.3034 75.9749 53.016 76.9013 53.9144C77.8278 54.8127 78.5627 55.8792 79.0641 57.0529C79.5655 58.2266 79.8236 59.4846 79.8236 60.755C79.8236 62.0255 79.5655 63.2835 79.0641 64.4572C78.5627 65.6309 77.8278 66.6974 76.9013 67.5957C75.9749 68.494 74.875 69.2066 73.6646 69.6928C72.4541 70.179 71.1567 70.4292 69.8465 70.4292H49.8924L47.9026 72.3858V83.9894L49.8924 85.9188H69.8465C75.4186 85.9608 80.8567 84.2627 85.3564 81.0756C89.856 77.8885 93.1782 73.3817 94.8315 68.2219C96.4848 63.0621 96.3814 57.5233 94.5366 52.4248C92.6918 47.3264 89.2035 42.9392 84.5879 39.9121Z",
        fill: "#4285F4"
      }), jsx("path", {
        d: "M29.9106 85.8093H49.8647V70.3198H29.9106C28.489 70.3195 27.084 70.0229 25.7909 69.4502L22.9883 70.2926L14.945 78.0374L14.2444 80.7549C18.7549 84.0574 24.2587 85.8331 29.9106 85.8093Z",
        fill: "#34A853"
      }), jsx("path", {
        d: "M29.9108 35.5666C24.5042 35.5979 19.2427 37.2658 14.8611 40.3374C10.4796 43.4089 7.19679 47.7307 5.47131 52.6992C3.74583 57.6676 3.6638 63.0345 5.23668 68.0503C6.80957 73.0662 9.95882 77.4804 14.2446 80.6765L25.8191 69.4534C24.3482 68.809 23.0605 67.8282 22.0665 66.5952C21.0724 65.3622 20.4018 63.9138 20.112 62.3742C19.8222 60.8346 19.9219 59.2498 20.4027 57.7558C20.8834 56.2618 21.7308 54.9032 22.872 53.7965C24.0133 52.6899 25.4145 51.8682 26.9553 51.4021C28.496 50.936 30.1304 50.8392 31.7182 51.1202C33.306 51.4012 34.7998 52.0516 36.0714 53.0154C37.343 53.9793 38.3545 55.2279 39.0191 56.6541L50.5936 45.431C48.1642 42.3514 45.033 39.8585 41.445 38.1473C37.857 36.436 33.9093 35.5527 29.9108 35.5666Z",
        fill: "#FBBC05"
      })]
    });
  };
  e.Kubernetes = function () {
    return jsxs("svg", {
      width: "32",
      height: "32",
      viewBox: "0 0 100 100",
      fill: "none",
      children: [jsx("rect", {
        width: "100",
        height: "100"
      }), jsx("path", {
        d: "M49.7013 8.00735C48.941 8.0456 48.1961 8.23389 47.5103 8.56115L17.6123 22.8303C16.8385 23.1994 16.1586 23.7365 15.623 24.4017C15.0875 25.0669 14.7101 25.8431 14.5189 26.6726L7.14291 58.7246C6.97258 59.4631 6.95352 60.228 7.08685 60.9739C7.22018 61.7198 7.50319 62.4316 7.91913 63.0673C8.01998 63.2226 8.12845 63.3731 8.24415 63.5179L28.9383 89.2184C29.4739 89.8834 30.154 90.4204 30.9278 90.7893C31.7016 91.1583 32.5495 91.3498 33.4083 91.3496L66.5946 91.342C67.4531 91.3426 68.3007 91.1517 69.0745 90.7834C69.8484 90.4151 70.5285 89.8789 71.0646 89.2146L91.7511 63.5103C92.287 62.845 92.6647 62.0685 92.856 61.2386C93.0473 60.4088 93.0474 59.5469 92.8561 58.717L85.4686 26.6649C85.2775 25.8354 84.9001 25.0593 84.3645 24.3941C83.829 23.7289 83.149 23.1918 82.3752 22.8226L52.4735 8.56115C51.6108 8.14948 50.6576 7.95905 49.7013 8.00735Z",
        fill: "#326CE5"
      }), jsx("path", {
        d: "M49.9976 18.915C49.0093 18.9151 48.208 19.8043 48.2081 20.9011C48.2081 20.9179 48.2116 20.934 48.2119 20.9508C48.2105 21.0998 48.2033 21.2793 48.2081 21.4091C48.2317 22.0417 48.3697 22.5259 48.4528 23.1087C48.6034 24.3562 48.7295 25.3902 48.6517 26.3513C48.576 26.7138 48.3087 27.0452 48.0704 27.2756L48.0284 28.0319C46.9545 28.1207 45.8733 28.2835 44.7935 28.5284C40.1469 29.5822 36.1463 31.9729 33.1005 35.2008C32.9028 35.0661 32.5571 34.8184 32.4542 34.7425C32.1347 34.7856 31.8118 34.884 31.3912 34.6394C30.5904 34.1009 29.861 33.3576 28.9784 32.4623C28.574 32.034 28.2812 31.6262 27.8007 31.2134C27.6916 31.1196 27.5251 30.9928 27.4031 30.8964C27.0274 30.5972 26.5844 30.4412 26.1565 30.4266C25.6064 30.4078 25.0768 30.6226 24.7303 31.0568C24.1142 31.8287 24.3114 33.0084 25.17 33.6921C25.1787 33.6991 25.188 33.7045 25.1968 33.7112C25.3147 33.8068 25.4592 33.9292 25.5677 34.0092C26.0775 34.3852 26.5433 34.5777 27.0513 34.8762C28.1216 35.5364 29.0088 36.0838 29.7126 36.7438C29.9874 37.0364 30.0355 37.552 30.072 37.775L30.6456 38.2868C27.5752 42.9023 26.1541 48.6033 26.9939 54.4122L26.2445 54.6299C26.0469 54.8847 25.7678 55.2856 25.4759 55.4052C24.5551 55.6949 23.5188 55.8013 22.2678 55.9323C21.6804 55.9811 21.1736 55.952 20.5509 56.0698C20.4138 56.0957 20.2229 56.1454 20.0729 56.1805C20.0677 56.1816 20.0628 56.1832 20.0576 56.1844C20.0495 56.1863 20.0387 56.1902 20.0309 56.192C18.9761 56.4466 18.2985 57.4149 18.5167 58.369C18.7348 59.3234 19.7651 59.9037 20.8262 59.6753C20.8339 59.6735 20.845 59.6732 20.853 59.6714C20.865 59.6687 20.8755 59.6629 20.8874 59.66C21.0353 59.6276 21.2207 59.5915 21.3501 59.5569C21.9623 59.3931 22.4057 59.1526 22.956 58.942C24.1401 58.5178 25.1208 58.1634 26.0762 58.0253C26.4753 57.9941 26.8957 58.2712 27.1048 58.3881L27.8849 58.2545C29.6799 63.8134 33.4417 68.3064 38.2052 71.1257L37.8801 71.9049C37.9973 72.2074 38.1265 72.6168 38.0392 72.9155C37.6919 73.8152 37.0969 74.7648 36.4195 75.8235C36.0914 76.3126 35.7557 76.6922 35.4597 77.252C35.3889 77.3859 35.2987 77.5917 35.2303 77.7332C34.7704 78.7161 35.1077 79.8482 35.9912 80.2731C36.8802 80.7006 37.9838 80.2497 38.4614 79.2648C38.4621 79.2634 38.4645 79.2624 38.4652 79.261C38.4657 79.2599 38.4647 79.2582 38.4652 79.2571C38.5332 79.1175 38.6296 78.934 38.6869 78.8026C38.9405 78.2225 39.0249 77.7253 39.2032 77.1641C39.6766 75.9761 39.9368 74.7296 40.5886 73.9529C40.7671 73.7402 41.0581 73.6584 41.3598 73.5778L41.7651 72.8444C45.9178 74.4366 50.566 74.8638 55.2094 73.8107C56.2686 73.5705 57.2913 73.2596 58.2799 72.8865C58.3938 73.0883 58.6055 73.4762 58.6622 73.5739C58.9688 73.6736 59.3034 73.725 59.5761 74.1277C60.0638 74.9599 60.3973 75.9444 60.8035 77.1336C60.9819 77.6947 61.07 78.1919 61.3236 78.7721C61.3814 78.9043 61.4772 79.0905 61.5453 79.2304C62.0219 80.2185 63.1289 80.671 64.0193 80.2425C64.9027 79.8175 65.2404 78.6855 64.7802 77.7027C64.7118 77.5611 64.6178 77.3554 64.547 77.2214C64.2509 76.6617 63.9153 76.2859 63.5872 75.7968C62.9097 74.7381 62.3478 73.8587 62.0004 72.959C61.8551 72.495 62.0249 72.2064 62.138 71.9049C62.0703 71.8273 61.9253 71.3891 61.8398 71.183C66.7901 68.2634 70.4415 63.6028 72.1563 58.2201C72.3878 58.2565 72.7903 58.3276 72.921 58.3538C73.1901 58.1765 73.4376 57.9451 73.9228 57.9833C74.8783 58.1213 75.8589 58.4758 77.043 58.9C77.5934 59.1105 78.0368 59.355 78.649 59.5187C78.7784 59.5533 78.9637 59.5856 79.1117 59.618C79.1236 59.6209 79.1341 59.6267 79.1461 59.6294C79.1541 59.6312 79.1652 59.6315 79.1728 59.6333C80.234 59.8614 81.2644 59.2814 81.4824 58.327C81.7003 57.3729 81.023 56.4043 79.9682 56.15C79.8147 56.1152 79.5972 56.056 79.4481 56.0278C78.8254 55.91 78.3187 55.939 77.7313 55.8903C76.4802 55.7593 75.4439 55.6529 74.5232 55.3632C74.1477 55.2177 73.8806 54.7715 73.7508 54.5879L73.0281 54.3778C73.4028 51.6701 73.3017 48.8521 72.6533 46.0325C71.9989 43.1867 70.8424 40.5839 69.2999 38.2907C69.4853 38.1223 69.8354 37.8127 69.9346 37.7216C69.9637 37.4009 69.9387 37.0646 70.2711 36.7094C70.9749 36.0494 71.8622 35.502 72.9325 34.8418C73.4405 34.5433 73.9101 34.3508 74.4199 33.9748C74.5352 33.8897 74.6926 33.7551 74.8138 33.6578C75.6722 32.9738 75.8698 31.7941 75.2535 31.0224C74.6372 30.2507 73.4429 30.178 72.5845 30.862C72.4623 30.9587 72.2965 31.0848 72.1868 31.179C71.7064 31.5919 71.4097 31.9996 71.0053 32.4279C70.1228 33.3233 69.3933 34.0703 68.5925 34.6088C68.2455 34.8106 67.7372 34.7408 67.5066 34.7272L66.8259 35.2123C62.9448 31.1472 57.6606 28.5482 51.9707 28.0433C51.9548 27.8051 51.9339 27.3746 51.9286 27.2451C51.6957 27.0224 51.4143 26.8323 51.3436 26.3513C51.2657 25.3902 51.3957 24.3562 51.5462 23.1087C51.6293 22.5259 51.7674 22.0417 51.791 21.4091C51.7963 21.2653 51.7877 21.0566 51.7871 20.9011C51.787 19.8043 50.9859 18.9149 49.9976 18.915ZM47.7569 32.7793L47.2254 42.1559L47.1872 42.175C47.1515 43.0138 46.4604 43.6836 45.6118 43.6836C45.2642 43.6836 44.9433 43.5721 44.6826 43.3819L44.6673 43.3895L36.9701 37.9393C39.3358 35.6157 42.3616 33.8987 45.8489 33.1078C46.4859 32.9633 47.1226 32.8561 47.7569 32.7793ZM52.2422 32.7793C56.3135 33.2795 60.0787 35.1209 62.964 37.9431L55.3165 43.359L55.2897 43.3475C54.6109 43.8427 53.6545 43.7198 53.1255 43.0572C52.9087 42.7858 52.795 42.4666 52.7813 42.1444L52.7737 42.1406L52.2422 32.7793ZM34.1788 41.4416L41.2068 47.7207L41.1992 47.7589C41.8335 48.3097 41.9271 49.2656 41.398 49.9283C41.1813 50.1997 40.8912 50.3818 40.5797 50.4668L40.5721 50.4973L31.5633 53.0945C31.1048 48.9066 32.093 44.8357 34.1788 41.4416ZM65.7668 41.4454C66.811 43.1361 67.6017 45.0243 68.0725 47.0714C68.5376 49.0939 68.6543 51.1128 68.4625 53.0639L59.4079 50.4591L59.4002 50.4209C58.5894 50.1996 58.0911 49.3758 58.2799 48.5495C58.3572 48.211 58.5371 47.9246 58.7808 47.713L58.777 47.6939L65.7668 41.4454ZM48.5561 48.2057H51.4354L53.2249 50.44L52.5825 53.2282L49.9976 54.4695L47.4051 53.2244L46.7627 50.4362L48.5561 48.2057ZM57.7866 55.8521C57.909 55.8459 58.0308 55.8569 58.1499 55.8788L58.1652 55.8597L67.4836 57.4333C66.1199 61.2604 63.5103 64.5758 60.0235 66.7945L56.4062 58.0673L56.4177 58.052C56.0854 57.2808 56.4179 56.3765 57.1824 56.0087C57.3782 55.9145 57.5827 55.8624 57.7866 55.8521ZM42.136 55.8903C42.8471 55.9002 43.485 56.3932 43.6502 57.1163C43.7275 57.4548 43.6899 57.7902 43.5622 58.0864L43.589 58.1208L40.01 66.7602C36.6638 64.6154 33.9985 61.404 32.5728 57.4639L41.811 55.8979L41.8263 55.917C41.9296 55.898 42.0344 55.8888 42.136 55.8903ZM49.9403 59.6753C50.188 59.6662 50.4393 59.7169 50.6782 59.8319C50.9914 59.9825 51.2334 60.2197 51.3856 60.5041H51.4201L55.9741 68.7233C55.3831 68.9212 54.7755 69.0904 54.154 69.2313C50.6711 70.0212 47.1993 69.7819 44.0555 68.7119L48.5981 60.5079H48.6058C48.8784 59.9989 49.3953 59.6953 49.9403 59.6753Z",
        fill: "white",
        stroke: "white",
        strokeWidth: "0.25"
      })]
    });
  };
  e.Cisco = function () {
    return jsxs("svg", {
      width: "32",
      height: "32",
      viewBox: "0 0 392 392",
      fill: "none",
      children: [jsxs("g", {
        clipPath: "url(#clip0_1888_24854)",
        children: [jsx("path", {
          d: "M128.056 230H110.868V298.116H128.056V230Z",
          fill: "#C4122E"
        }), jsx("path", {
          d: "M266.651 249.515C265.96 249.156 260.434 245.878 252.213 245.878C241.079 245.878 233.375 253.615 233.375 264.046C233.375 274.168 240.758 282.231 252.213 282.231C260.292 282.231 265.911 279.024 266.651 278.616V296.898C264.517 297.503 258.654 299.321 250.977 299.321C231.655 299.321 214.706 285.993 214.706 264.046C214.706 243.706 230.059 228.788 250.977 228.788C259.067 228.788 265.034 230.754 266.651 231.233V249.515Z",
          fill: "#C4122E"
        }), jsx("path", {
          d: "M87.2384 249.515C86.547 249.156 81.0209 245.878 72.7997 245.878C61.6659 245.878 53.962 253.615 53.962 264.046C53.962 274.168 61.3446 282.231 72.7997 282.231C80.8793 282.231 86.498 279.024 87.2384 278.616V296.898C85.1042 297.503 79.2405 299.321 71.5639 299.321C52.2415 299.321 35.293 285.993 35.293 264.046C35.293 243.706 50.6463 228.788 71.5639 228.788C79.6543 228.788 85.6214 230.754 87.2384 231.233V249.515Z",
          fill: "#C4122E"
        }), jsx("path", {
          d: "M320.724 246.134C310.527 246.134 302.954 254.159 302.954 264.046C302.954 273.955 310.527 281.975 320.724 281.975C330.911 281.975 338.506 273.955 338.506 264.046C338.506 254.159 330.911 246.134 320.724 246.134ZM356.718 264.046C356.718 283.532 341.675 299.321 320.724 299.321C299.774 299.321 284.753 283.532 284.753 264.046C284.753 244.593 299.774 228.788 320.724 228.788C341.675 228.788 356.718 244.593 356.718 264.046Z",
          fill: "#C4122E"
        }), jsx("path", {
          d: "M193.24 245.481C192.984 245.4 185.748 243.402 179.803 243.402C172.916 243.402 169.17 245.71 169.17 248.982C169.17 253.131 174.223 254.579 177.048 255.472L181.79 256.98C192.946 260.53 198.031 268.168 198.031 276.466C198.031 293.578 182.983 299.327 169.829 299.327C160.688 299.327 152.124 297.645 151.28 297.465V281.79C152.793 282.171 160.002 284.322 167.51 284.322C176.063 284.322 179.994 281.823 179.994 277.963C179.994 274.511 176.591 272.518 172.328 271.179C171.288 270.831 169.725 270.341 168.658 269.992C159.087 266.965 151.105 261.341 151.105 250.066C151.105 237.326 160.644 228.772 176.487 228.772C184.856 228.772 192.728 230.803 193.24 230.939V245.481Z",
          fill: "#C4122E"
        }), jsx("path", {
          d: "M17.0683 156.797C17.0683 152.104 13.2354 148.298 8.53689 148.298C3.83833 148.298 0 152.104 0 156.797V174.677C0 179.397 3.83833 183.208 8.53689 183.208C13.2354 183.208 17.0683 179.397 17.0683 174.677V156.797Z",
          fill: "#15495D"
        }), jsx("path", {
          d: "M63.9424 133.329C63.9424 128.636 60.1095 124.819 55.4109 124.819C50.7069 124.819 46.874 128.636 46.874 133.329V174.679C46.874 179.4 50.7069 183.205 55.4109 183.205C60.1095 183.205 63.9424 179.4 63.9424 174.679V133.329Z",
          fill: "#15495D"
        }), jsx("path", {
          d: "M110.813 101.22C110.813 96.5269 106.981 92.7158 102.282 92.7158C97.578 92.7158 93.7451 96.5269 93.7451 101.22V191.669C93.7451 196.389 97.578 200.2 102.282 200.2C106.981 200.2 110.813 196.389 110.813 191.669V101.22Z",
          fill: "#15495D"
        }), jsx("path", {
          d: "M157.687 133.329C157.687 128.636 153.855 124.819 149.156 124.819C144.452 124.819 140.619 128.636 140.619 133.329V174.679C140.619 179.4 144.452 183.205 149.156 183.205C153.855 183.205 157.687 179.4 157.687 174.679V133.329Z",
          fill: "#15495D"
        }), jsx("path", {
          d: "M204.508 156.797C204.508 152.104 200.702 148.298 196.026 148.298C191.327 148.298 187.494 152.104 187.494 156.797V174.677C187.494 179.397 191.327 183.208 196.026 183.208C200.702 183.208 204.508 179.397 204.508 174.677V156.797Z",
          fill: "#15495D"
        }), jsx("path", {
          d: "M204.53 156.797C204.53 152.104 200.697 148.298 195.999 148.298C191.3 148.298 187.462 152.104 187.462 156.797V174.677C187.462 179.397 191.3 183.208 195.999 183.208C200.697 183.208 204.53 179.397 204.53 174.677V156.797Z",
          fill: "#15495D"
        }), jsx("path", {
          d: "M251.404 133.329C251.404 128.636 247.571 124.819 242.873 124.819C238.169 124.819 234.336 128.636 234.336 133.329V174.679C234.336 179.4 238.169 183.205 242.873 183.205C247.571 183.205 251.404 179.4 251.404 174.679V133.329Z",
          fill: "#15495D"
        }), jsx("path", {
          d: "M298.275 101.22C298.275 96.5269 294.442 92.7158 289.744 92.7158C285.04 92.7158 281.207 96.5269 281.207 101.22V191.669C281.207 196.389 285.04 200.2 289.744 200.2C294.442 200.2 298.275 196.389 298.275 191.669V101.22Z",
          fill: "#15495D"
        }), jsx("path", {
          d: "M345.15 133.329C345.15 128.636 341.317 124.819 336.619 124.819C331.915 124.819 328.082 128.636 328.082 133.329V174.679C328.082 179.4 331.915 183.205 336.619 183.205C341.317 183.205 345.15 179.4 345.15 174.679V133.329Z",
          fill: "#15495D"
        }), jsx("path", {
          d: "M391.97 156.797C391.97 152.104 388.164 148.298 383.488 148.298C378.789 148.298 374.956 152.104 374.956 156.797V174.677C374.956 179.397 378.789 183.208 383.488 183.208C388.164 183.208 391.97 179.397 391.97 174.677V156.797Z",
          fill: "#15495D"
        }), jsx("path", {
          d: "M382.165 289.145V290.212H379.127V298.112H377.881V290.212H374.826V289.145H382.165Z",
          fill: "#C4122E"
        }), jsx("path", {
          d: "M382.802 289.145H384.756L387.44 296.5H387.484L390.081 289.145H391.997V298.112H390.718V290.762H390.674L387.952 298.112H386.771L384.114 290.762H384.054V298.112H382.802V289.145Z",
          fill: "#C4122E"
        })]
      }), jsx("defs", {
        children: jsx("clipPath", {
          id: "clip0_1888_24854",
          children: jsx("rect", {
            width: "392",
            height: "206.889",
            fill: "white",
            transform: "translate(0 92.5555)"
          })
        })
      })]
    });
  };
})(n || (n = {}));
export function $$tH1(e, t, r) {
  if (t === ConfirmationLevel.NO) return;
  let n = r ?? atomStoreManager.get(Rg);
  if (t === ConfirmationLevel.YES_WITHOUT_REORDER) {
    let t = atomStoreManager.get(Gn).map(t => t.id === e ? {
      ...t,
      lastAddedAtByUserId: {
        ...t.lastAddedAtByUserId,
        [n]: Date.now()
      }
    } : t);
    atomStoreManager.set(Gn, t);
    return;
  }
  let [[i], a] = h()(atomStoreManager.get(Gn), t => t.id === e);
  let s = {
    id: e,
    lastAddedAtByUserId: {
      ...(i?.lastAddedAtByUserId || {}),
      [n]: Date.now()
    }
  };
  atomStoreManager.set(Gn, [s, ...a]);
}
export function $$tz14(e, t) {
  t && (Fullscreen?.triggerActionEnumInUserEditScope(t.actionEnum, {
    source: YV
  }), atomStoreManager.set(W6, e));
}
export async function $$tW13(e, t, r) {
  try {
    let n = await teamLibraryCache.getCanvas(e);
    WhiteboardTsApi?.setPlatformShapeSelected(n, $$t$2(e), e.type, e.userFacingVersion.toString(), e.library_key, r);
    Fullscreen?.triggerActionEnumInUserEditScope(Command.SET_TOOL_SHAPE_WHITEBOARD_PLATFORM, {});
    atomStoreManager.set(W6, t);
  } catch (e) {
    reportError(ServiceCategories.FIGJAM, e);
  }
}
export function $$tK8(e, t) {
  if (e === DesignGraphElements.CONNECTOR_CURVED && !getFeatureFlags().ad_curved_connectors) return;
  let r = fullscreenValue.getViewportInfo();
  permissionScopeHandler.user("drop-shape-on-canvas", () => {
    Fullscreen && Fullscreen.dropDiagramItemOntoCanvas(e, Math.round(r.offsetX), Math.round(r.offsetY), 0, 0, AlignmentPosition.CENTER, t);
  });
}
export function $$tY9(e, t) {
  try {
    let r = fullscreenValue.getViewportInfo();
    let n = {
      x: r.offsetX,
      y: r.offsetY,
      percentOffsetX: .5,
      percentOffsetY: .5
    };
    teamLibraryCache.getCanvas(e).then(r => {
      let i;
      switch (e.type) {
        case PrimaryWorkflowEnum.COMPONENT:
          i = permissionScopeHandler.system("upsert-shared-symbol", () => LibraryPubSub?.upsertSharedSymbol(e.component_key ?? ii.INVALID, e.content_hash ?? 'INVALID', e.library_key, Confirmation.NO, r, SceneIdentifier.ACTIVE_SCENE));
          break;
        case PrimaryWorkflowEnum.STATE_GROUP:
          i = permissionScopeHandler.system("upsert-shared-state-group", () => LibraryPubSub?.upsertSharedStateGroup(e.key, e.version, e.library_key, Confirmation.NO, r, SceneIdentifier.ACTIVE_SCENE));
      }
      if (!i || i.fileUpdateRequired || !i.localGUID) throw Error("An error occurred while adding an instance of this component.");
      switch (e.type) {
        case PrimaryWorkflowEnum.COMPONENT:
          permissionScopeHandler.user("insert-component", () => {
            Fullscreen?.insertInstance(i.localGUID, n, {}, null, !0, !1, !0);
          });
          break;
        case PrimaryWorkflowEnum.STATE_GROUP:
          permissionScopeHandler.user("insert-state-group", () => {
            Fullscreen?.insertStateGroup(i.localGUID, n, {}, null, !0, e.default_state_key, !1);
          });
          break;
        default:
          throw Error("An error occurred while adding an instance of this component.");
      }
      Fullscreen && (Fullscreen.triggerActionEnumInUserEditScope(Command.COMMIT, {}), Fullscreen.triggerActionEnumInUserEditScope(Command.SET_TOOL_DEFAULT, {}), (e.type === PrimaryWorkflowEnum.COMPONENT || e.type === PrimaryWorkflowEnum.STATE_GROUP) && $$tH1($$t$2(e), t, getInitialOptions().user_data?.id));
    }).catch(e => {
      reportError(ServiceCategories.FIGJAM, e);
    });
  } catch (e) {
    reportError(ServiceCategories.FIGJAM, e);
  }
}
export function $$t$2(e) {
  return e.type === PrimaryWorkflowEnum.COMPONENT ? e.component_key ?? "" : e.key;
}
export function $$tX11() {
  AppStateTsApi?.figjamState().isDraggingSidebarItem.set(!1);
}
export function $$tq12() {
  AppStateTsApi?.figjamState().isDraggingSidebarItem.set(!0);
}
export function $$tJ6(e) {
  switch (e) {
    case "AWS":
      return n.AWS();
    case "Azure":
      return n.Azure();
    case "Google Cloud":
      return n.GoogleCloud();
    case "Kubernetes":
      return n.Kubernetes();
    case "Cisco":
      return n.Cisco();
    default:
      return null;
  }
}
export function $$tZ7(e) {
  switch (e) {
    case "SQUARE":
      return _$$A121;
    case "ELLIPSE":
      return _$$A106;
    case "ROUNDED_RECTANGLE":
      return _$$A123;
    case "DIAMOND":
      return _$$A103;
    case "TRIANGLE_UP":
      return _$$A122;
    case "TRIANGLE_DOWN":
      return _$$A129;
    case "PARALLELOGRAM_RIGHT":
      return _$$A117;
    case "PARALLELOGRAM_LEFT":
      return _$$A116;
    case "ENG_DATABASE":
      return _$$A107;
    case "ENG_QUEUE":
      return _$$A110;
    case "ENG_FILE":
      return _$$A108;
    case "ENG_FOLDER":
      return _$$A109;
    case "TRAPEZOID":
      return _$$A128;
    case "STAR":
      return _$$A126;
    case "SHIELD":
      return _$$A124;
    case "HEXAGON":
      return _$$A111;
    case "PENTAGON":
      return _$$A118;
    case "OCTAGON":
      return _$$A114;
    case "PLUS":
      return _$$A119;
    case "PREDEFINED_PROCESS":
      return _$$A120;
    case "MANUAL_INPUT":
      return _$$A113;
    case "CHEVRON":
      return _$$A102;
    case "DOCUMENT_SINGLE":
      return _$$A105;
    case "DOCUMENT_MULTIPLE":
      return _$$A104;
    case "ARROW_LEFT":
      return _$$A52;
    case "ARROW_RIGHT":
      return _$$A53;
    case "SUMMING_JUNCTION":
      return _$$A127;
    case "OR":
      return _$$A115;
    case "SPEECH_BUBBLE":
      return _$$A125;
    case "INTERNAL_STORAGE":
      return _$$A112;
    case "MINDMAP_TREE_NUCLEUS":
      return _$$A131;
    default:
      return _$$A130;
  }
}
let tQ = {
  advanced: {
    swapper: {
      activity: _$$A2,
      archive: _$$A3,
      authentication: _$$A4,
      chat: _$$A5,
      cloud: _$$A6,
      compute: _$$A7,
      database: _$$A8,
      desktop: _$$A9,
      email: _$$A0,
      file: _$$A1,
      frontEndService: _$$A10,
      instant: _$$A11,
      location: _$$A12,
      mobile: _$$A13,
      package: _$$A14,
      payment: _$$A15,
      security: _$$A16,
      send: _$$A17,
      server: _$$A18,
      service: _$$A19,
      settings: _$$A20,
      storage: _$$A21,
      terminal: _$$A22,
      user: _$$A23,
      wallet: _$$A24,
      web: _$$A25
    },
    sidebar: {
      activity: _$$A26,
      archive: _$$A27,
      authentication: _$$A28,
      chat: _$$A29,
      cloud: _$$A30,
      compute: _$$A31,
      database: _$$A32,
      desktop: _$$A33,
      email: _$$A34,
      file: _$$A35,
      frontEndService: _$$A36,
      instant: _$$A37,
      location: _$$A38,
      mobile: _$$A39,
      package: _$$A40,
      payment: _$$A41,
      security: _$$A42,
      send: _$$A43,
      server: _$$A44,
      service: _$$A45,
      settings: _$$A46,
      storage: _$$A47,
      terminal: _$$A48,
      user: _$$A49,
      wallet: _$$A50,
      web: _$$A51
    }
  },
  awsGeneralResources: {
    swapper: {
      alert: _$$A54,
      authenticatedUser: _$$A55,
      awsManagementConsole: _$$A56,
      awsMarketplace: _$$A57,
      camera: _$$A58,
      chat: _$$A59,
      client: _$$A60,
      coldStorage: _$$A61,
      credentials: _$$A62,
      database: _$$A63,
      dataStream: _$$A64,
      dataTable: _$$A65,
      disk: _$$A66,
      document: _$$A67,
      documents: _$$A68,
      email: _$$A69,
      firewall: _$$A70,
      folder: _$$A71,
      folders: _$$A72,
      forums: _$$A73,
      gear: _$$A74,
      genericApplication: _$$A75,
      gitRepository: _$$A76,
      globe: _$$A77,
      internet: _$$A78,
      internetAlt1: _$$A79,
      internetAlt2: _$$A80,
      jsonScript: _$$A81,
      logs: _$$A82,
      magnifyingGlass: _$$A83,
      metrics: _$$A84,
      mobileClient: _$$A85,
      multimedia: _$$A86,
      officeBuilding: _$$A87,
      programmingLanguage: _$$A88,
      question: _$$A89,
      recover: _$$A90,
      samlToken: _$$A91,
      sDK: _$$A92,
      server: _$$A93,
      servers: _$$A94,
      shield: _$$A95,
      sourceCode: _$$A96,
      sslPadlock: _$$A97,
      tapeStorage: _$$A98,
      toolkit: _$$A99,
      user: _$$A100,
      users: _$$A101
    }
  }
};
export function $$t05(e, t, r, n) {
  let i = toCamelCase(t);
  let s = n ? toCamelCase(`${e} ${n}`) : toCamelCase(e);
  let o = toCamelCase(r);
  return tQ[s]?.[o]?.[i];
}
let t1 = _$$A(() => ({
  advanced: {
    activity: getI18nString("whiteboard.shapes_sidebar.shapes.activity"),
    archive: getI18nString("whiteboard.shapes_sidebar.shapes.archive"),
    authentication: getI18nString("whiteboard.shapes_sidebar.shapes.authentication"),
    chat: getI18nString("whiteboard.shapes_sidebar.shapes.chat"),
    cloud: getI18nString("whiteboard.shapes_sidebar.shapes.cloud"),
    compute: getI18nString("whiteboard.shapes_sidebar.shapes.compute"),
    database: getI18nString("whiteboard.shapes_sidebar.shapes.database"),
    desktop: getI18nString("whiteboard.shapes_sidebar.shapes.desktop"),
    email: getI18nString("whiteboard.shapes_sidebar.shapes.email"),
    file: getI18nString("whiteboard.shapes_sidebar.shapes.file"),
    frontEndService: getI18nString("whiteboard.shapes_sidebar.shapes.frontEndService"),
    instant: getI18nString("whiteboard.shapes_sidebar.shapes.instant"),
    location: getI18nString("whiteboard.shapes_sidebar.shapes.location"),
    mobile: getI18nString("whiteboard.shapes_sidebar.shapes.mobile"),
    package: getI18nString("whiteboard.shapes_sidebar.shapes.package"),
    payment: getI18nString("whiteboard.shapes_sidebar.shapes.payment"),
    security: getI18nString("whiteboard.shapes_sidebar.shapes.security"),
    send: getI18nString("whiteboard.shapes_sidebar.shapes.send"),
    server: getI18nString("whiteboard.shapes_sidebar.shapes.server"),
    service: getI18nString("whiteboard.shapes_sidebar.shapes.service"),
    settings: getI18nString("whiteboard.shapes_sidebar.shapes.settings"),
    storage: getI18nString("whiteboard.shapes_sidebar.shapes.storage"),
    terminal: getI18nString("whiteboard.shapes_sidebar.shapes.terminal"),
    user: getI18nString("whiteboard.shapes_sidebar.shapes.user"),
    wallet: getI18nString("whiteboard.shapes_sidebar.shapes.wallet"),
    web: getI18nString("whiteboard.shapes_sidebar.shapes.web")
  }
}));
let t2 = _$$A(() => ({
  advanced: getI18nString("whiteboard.shapes_sidebar.section_title.advanced")
}));
export function $$t54(e, t) {
  let r = t1();
  let n = toCamelCase(t);
  return "advanced" === e ? r.advanced[n] ?? t : t;
}
export function $$t33(e, t) {
  return t2()[t ? toCamelCase(`${e}-${t}`) : toCamelCase(e)] ?? t ?? e;
}
export function $$t410(e, t) {
  return (e && t?.[e]?.id === iJ) ?? !1;
}
export var $$t80 = (e => (e[e.SelectedShape = 0] = "SelectedShape", e[e.ClosedPanel = 1] = "ClosedPanel", e[e.ClearedSearch = 2] = "ClearedSearch", e))($$t80 || {});
export function $$t617({
  searchState: e,
  libraryTitle: t,
  query: r
}) {
  if ("" === r) return {
    state: "inactive"
  };
  var n = "in-progress" === e.state ? e.queryHistory : [];
  if ("in-progress" === e.state && !r.startsWith(e.query)) {
    let t = e.queryHistory.length > 0 ? e.queryHistory[e.queryHistory.length - 1] : void 0;
    t && t.startsWith(e.query) || n.push(e.query);
  }
  return {
    state: "in-progress",
    queryHistory: n,
    libraryTitle: t,
    query: r
  };
}
export function $$t716({
  event: e,
  shape: t,
  searchState: r
}) {
  if ("complete" === r.state || "inactive" === r.state) return;
  let n = function (e) {
    switch (e) {
      case 0:
        return "SELECTED_SHAPE";
      case 2:
        return "CLEARED_SEARCH";
      case 1:
        return "CLOSED_PANEL";
    }
  }(e);
  analyticsEventManager.trackDefinedEvent("figjam_advanced_diagramming.shapes_sidebar_search_completion", {
    shape: t,
    result: n,
    libraryTitle: r.libraryTitle,
    query: r.query,
    queryHistory: r.queryHistory.join(",")
  });
}
export function $$t919() {
  return useCallback(e => {
    ("CURVED" !== e || getFeatureFlags().ad_curved_connectors) && Fullscreen?.triggerActionEnumInUserEditScope("STRAIGHT_NO_ENDPOINTS" === e ? Command.SET_TOOL_CONNECTOR_STRAIGHT_NO_ENDPOINTS : $$rt15(e), {
      source: YV
    });
  }, []);
}
export function $$re18() {
  let e = OD();
  let t = AT();
  let r = R0();
  let n = getObservableValue(AppStateTsApi?.figjamState().straightConnectorNoEndpointSelected, !1);
  return useCallback(i => {
    switch (i) {
      case "STRAIGHT":
        return t && !n;
      case "STRAIGHT_NO_ENDPOINTS":
        return t && n;
      case "ELBOWED":
        return e;
      case "CURVED":
        return r;
      default:
        throwTypeError(i);
    }
  }, [e, r, t, n]);
}
export function $$rt15(e) {
  switch (e) {
    case "ELBOWED":
      return Command.SET_TOOL_CONNECTOR_ELBOWED;
    case "STRAIGHT":
      return Command.SET_TOOL_CONNECTOR_STRAIGHT;
    case "CURVED":
      return Command.SET_TOOL_CONNECTOR_CURVED;
    default:
      throwTypeError(e);
  }
}
export const fT = $$t80;
export const KE = $$tH1;
export const yw = $$t$2;
export const pf = $$t33;
export const vo = $$t54;
export const N0 = $$t05;
export const Nd = $$tJ6;
export const CO = $$tZ7;
export const Zt = $$tK8;
export const z9 = $$tY9;
export const ek = $$t410;
export const UH = $$tX11;
export const Ln = $$tq12;
export const KG = $$tW13;
export const Ac = $$tz14;
export const tl = $$rt15;
export const ko = $$t716;
export const vD = $$t617;
export const DP = $$re18;
export const vz = $$t919;
